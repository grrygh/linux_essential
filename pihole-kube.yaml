appVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
    name: local
provisioner: kubernetes.io/no-provisioner
volumeBlindingMode: WaitForFirstConsumer
---
appVersion: v1
kind: PersistentVolume
metadata:
    name: pihole-local-etc-volume
    labels:
        director: etc
spec:
    capacity:
        storage: 1Gi
    accessModes:
    - ReadWriteOnce
    PersistentVolumeReclaimPolicy: Delete
    StorageClassName: local
    local:
        path: /path/to/volume/on/host
    nodeAffinity:
        required:
            nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                operator: In
                values:
                - dev2
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: pihole-local-etc-claim
spec:
    storageClassName: local
    accessModes:
    - ReadWriteOnce
    resources:
        requests:
            storage: 1Gi
    selector:
        matchLabels:
            director: etc
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: pihole-local-dnsmasq-volume
    labels:
        directory: dnsmasq.d
specs:
    capacity:
        storage: 1Gi
    accessModes:
    - ReadWriteOnce
    PersistentVolumeReclaimPolicy: Delete
    storageClassName: local
    local:
        path: /path/to/volume/on/host
    nodeAffinity:
        required:
            nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                operator: In
                values:
                - dev2
---
appVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: pihole-local-dnsmasq-claim
spec:
    storageClassName: local
    accessModes:
    - ReadWriteOnce
    resources:
        requests:
            storage: 500Mi
        selector:
            matchLabels:
                directory: dnsmasq.d
---
appVersion: apps/v1
kind: Deployment
metadata:
    name: pihole
    labels:
        apps: pihole
spec:
    replicas: 1
    selector:
        matchLabels:
            app: pihole
    template:
        metadata:
            labels:
                app: pihole
                name: pihole
        spec:
            containers:
            - name: pihole
              image: pihole/pihole:latest
              imagePullPolicy: Always
              env:
              - name: TZ
                value: "Asia/Singapore"
              - name: WEBPASSWORD
                value: "secret"
              volumeMounts:
              - name: pihole-local-etc-volume
                mountPath: "/etc/pihole"
              - name: pihole-local-dnsmasq-volume
                mountPath: "/etc/dnsmasq.d"
        volumes:
        - name: pihole-local-etc-volume
          persistentVolumeClaim:
            claimName: pihole-local-etc-claim
        - name: pihole-local-dnsmasq-volume
          persistentVolumeClaim:
            claimName: pihole-local-dnsmasq-claim
---
apiVersion: v1
kind: Service
metadata:
    name: pihole
spec:
    selector:
        app: pihole
    ports:
    - port: 8000
      targetPort: 80
      name: pihole-admin
    - port: 53
      targetPort: 53
      protocol: TCP
      name: dns-tcp
    - port: 53
      targetPort: 53
      protocol: UDP
      name: dns-udp
    externalIPs:
    - dev2.ip.address